name: Release

###################################################
# Start the job on semantic versioned branch push #
###################################################
on:
  push:
    branches:
      - 'v[0-9]+.[0-9]+.[0-9]+-alpha.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+-beta.[0-9]+'
      - 'v[0-9]+.[0-9]+.[0-9]+'

############
# Set Jobs #
############
jobs:
  ##############
  # Define Job #
  ##############
  release:
    name: Release
    runs-on: ubuntu-latest

    ##############
    # Load Steps #
    ##############
    steps:
      #################
      # Checkout Code #
      #################
      - name: Checkout Code
        uses: actions/checkout@v2

      ###############
      # Get Version #
      ###############
      - name: Get Version
        shell: bash
        run: |
          pattern="refs/heads/"
          ver="${github_ref/$pattern/}"
          echo $ver
          echo "new_version=$ver" >> $GITHUB_ENV
        env:
          github_ref: ${{ github.ref }}

      #################
      # Setup Node JS #
      #################
      - name: Setup Node JS
        # Setup .npmrc file to publish to npm
        uses: actions/setup-node@v2
        with:
          node-version: ${{ fromJSON(secrets.PROD_ESM).node }}
          registry-url: https://registry.npmjs.org
          scope: '@qbcart'
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NODE_AUTH_TOKEN }}

      ################
      # Install Deps #
      ################
      - name: Install Deps
        working-directory: .
        shell: bash
        run: npm install

      #################
      # Build Package #
      #################
      - name: Build Package
        working-directory: .
        shell: bash
        run: npm run build

      ######################
      # Copy Package Files #
      ######################
      - name: Copy Package Files
        working-directory: .
        shell: bash
        run: |
          cp package.json publish_esm
          cp README.md publish_esm

      ########################
      # Publish Types To NPM #
      ########################
      - name: Publish Types To NPM
        working-directory: publish_esm
        shell: bash
        run: |
          npm version $ver --allow-same-version
          echo 'VER:' $ver
          npm publish --access public
        env:
          ver: ${{ env.new_version }}

      #########################
      # Create GitHub Release #
      #########################
      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ env.new_version }}
          release_name: ${{ env.new_version }}
          body_path: RELEASE.md
          draft: false
          prerelease: ${{ contains(env.new_version, 'alpha') || contains(env.new_version, 'beta') }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
